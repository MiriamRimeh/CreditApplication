Роли:

Клиент
	- да кандидатства за кредит
	- да вижда собствените си кредити
	- да вижда собствените си плащания
	- да редактира собствените си лични данни
	- да редактира собствените си данни за адрес
    - да редактира собствените си данни за финанси


Служител каса
	- да преглежда кандидатстванията за кредит
	- да преглежда кредитите на клиентите
	- да преглежда плащанията на клиентите
	- да редактира данните на клиента
	- да одобрява кандидатстванията за кредит
    - да отхвърля кредити
    - да прави вноски (да се направи модал за кеш)
    - да сторнира вноски по кредит (без усвояване)


Администратор
	- да преглежда кандидатстванията за кредит
	- да преглежда кредитите на клиентите
	- да преглежда плащанията на клиентите
	- да редактира данните на клиента
	- да одобрява кандидатстванията за кредит
    - да отхвърля кредити
    - да прави вноски (да се направи модал за кеш)
    - да сторнира вноски по кредит


    - да изтрива клиенти без кандидатствания
    - да приключва кредити по които има дължимо
    - да редактира кредити в статус очакващ решение
        - ако клиентът е допуснал грешка
        - ако могат да одобрят клиента за по-малко пари
    - НЕ може да трие кредити
    - да сторнира усвояване по кредит



------------
TODO:

Добави таблица за служителите и номенклатура дали са администратор или не

Да се добави ли поле за парола на клиента?

Формата за кандидатстване за кредит да е с Bootstrap и да матчва полетата на Client/Create.cshtml

Трябва ли да изтрия поле InterestRate от Credits, ако лихвата е постоянна?

Направи Лихвата на кредита да е по-висока, ако периода на кредита е по-дълъг

Да се добави CSS спрямо класовете, зададени в Bootstrap

Да се добави търсене по ЕГН на клиент и име на клиент
Да се добави търсене по номер на кредит
Да се добави търсене по номер на плащане
Да се добави търсене по дата на плащане 
Превод на имената на колоните от английски в Client/Details, Client/Edit, Client/Delete


TODO: сложи бутон за детайли към погасителния план (или линк, който да отваря Details Page)
TODO: сложи рейтинг на клиентите, с който да се изчислява погасителния план
TODO: ако клиентът вече съществува, данните му се попълват автоматично или да се попълват само първият път като кандидатства, след това да се прави валидация дали този човек го има в системат по ЕГН - да се измисли 
      по същия начин с адрес. Финансовата информация може да се промени в настройки, тя също не трябва да се попълва. Попълва се само информацията за кредита, който се иска.

!!!   Защо му е на сложител да създава нов кредит? Служител не трябва да може да създава нов кредит, а само клиентът. Следователно, те ми трябва бутон Create New в списък с кредитите
------------
Примерен тригер за създаване на RepaymentPlan

CREATE TRIGGER trg_CreateRepaymentPlan
ON [CreditApplication].[21180011].[Credits]
AFTER INSERT
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE 
        @CreditID           INT,
        @CreditAmount       DECIMAL(18,2),
        @BeginDate          DATE,
        @InterestRate       DECIMAL(5,4), -- например 0.0850 за 8.5%
        @PeriodMonths       INT,
        @InstallmentAmount  DECIMAL(18,2);

    -- Курсор за всички нововъведени кредити (в случай на пакетно вмъкване)
    DECLARE credit_cursor CURSOR LOCAL FAST_FORWARD
    FOR
    SELECT 
        ID,
        CreditAmount,
        CreditBeginDate,
        InterestRate,
        CreditPeriod,
        MonthlyInstallment
    FROM inserted;

    OPEN credit_cursor;
    FETCH NEXT FROM credit_cursor INTO 
        @CreditID, @CreditAmount, @BeginDate, @InterestRate, @PeriodMonths, @InstallmentAmount;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        DECLARE 
            @RemainingBalance DECIMAL(18,2) = @CreditAmount,
            @i                INT               = 1;

        WHILE @i <= @PeriodMonths
        BEGIN
            -- Дата на i-тата вноска (едномесечно отместване)
            DECLARE @InstDate DATE = DATEADD(MONTH, @i, @BeginDate);

            -- Калкулиране на лихвата за оставащия баланс
            DECLARE @Interest DECIMAL(18,2) = 
                ROUND(@RemainingBalance * (@InterestRate/12), 2);

            -- Принципал = фиксирана вноска – лихва
            DECLARE @Principal DECIMAL(18,2) = 
                ROUND(@InstallmentAmount - @Interest, 2);

            -- Актуализиране на оставащ баланс
            SET @RemainingBalance = 
                ROUND(@RemainingBalance - @Principal, 2);

            -- Вмъкване на ред в погасителния план
            INSERT INTO [CreditApplication].[21180011].[RepaymentPlan]
                (CreditID, InstallmentNumber, InstallmentDate, 
                 InstallmentAmount, Principal, Interest, 
                 isPaid, CreatedOn, ModifiedOn)
            VALUES
                (@CreditID, @i, @InstDate,
                 @InstallmentAmount, @Principal, @Interest,
                 0,           -- isPaid = false
                 GETDATE(),   -- CreatedOn
                 GETDATE()    -- ModifiedOn
                );

            SET @i = @i + 1;
        END

        FETCH NEXT FROM credit_cursor INTO 
            @CreditID, @CreditAmount, @BeginDate, @InterestRate, @PeriodMonths, @InstallmentAmount;
    END

    CLOSE credit_cursor;
    DEALLOCATE credit_cursor;
END;
GO
