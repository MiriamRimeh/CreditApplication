@page
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Employee,Admin")]
@model CreditApplication.Pages.Credits.EditModel

@{
    ViewData["Title"] = "Редакция на кредит";
}


<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <div class="card shadow-sm">
                <div class="card-header text-center">
                    <h4 class="mb-0">Промяна на детайли на кредит</h4>
                </div>

                <div class="card-body">
                    <form method="post" class="row g-3">
                        <input type="hidden" asp-for="Credit.ID" />
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group col-12">
                            <label asp-for="Credit.CreditAmount" class="control-label">Жeлана сума на кредит:</label>
                            <input asp-for="Credit.CreditAmount" class="form-control" type="number" required />
                            <span class="text-secondary">Въведете сума между 300 лв. и 5000 лв.</span>
                            <span asp-validation-for="Credit.CreditAmount" class="text-danger"></span>
                        </div>

                        <div class="form-group col-12">
                            <label asp-for="Credit.CreditPeriod" class="control-label">Период на кредита:</label>
                            <input asp-for="Credit.CreditPeriod" class="form-control" type="number" required />
                            <span class="text-secondary">Въведете период между 5 и 24 месеца.</span>
                            <span asp-validation-for="Credit.CreditPeriod" class="text-danger"></span>
                        </div>

                        <div class="form-group col-12">
                            <label asp-for="Credit.TotalCreditAmount" class="form-label text-secondary">
                                Общо дължимо в края на периода:
                            </label>
                            <input asp-for="Credit.TotalCreditAmount" class="form-control bg-white" readonly />
                        </div>

                        <div class="form-group col-12">
                            <label asp-for="Credit.MonthlyInstallment" class="form-label text-secondary">
                                Месечна вноска:
                            </label>
                            <input asp-for="Credit.MonthlyInstallment" class="form-control bg-white" readonly />
                        </div>

                        <div class="form-group col-12 text-center mt-4">
                            <input type="submit" value="Запази" class="btn btn-sm btn-primary-miriam px-5" />
                            <a asp-page="./Index" class="btn btn-sm btn-secondary-miriam px-4 ms-2">Назад</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Filter client options by EGN
        document.getElementById('searchEGN').addEventListener('input', function() {
            var filter = this.value.toLowerCase();
            var options = document.getElementById('ClientSelect').options;
            for (var i = 0; i < options.length; i++) {
                var text = options[i].text.toLowerCase();
                options[i].style.display = text.includes(filter) ? '' : 'none';
            }
        });

    </script>
    <script>

        (function() {
            const amountInput = document.getElementById('Credit_CreditAmount');
            const periodInput = document.getElementById('Credit_CreditPeriod');
            const monthlyLabel = document.getElementById('Credit_MonthlyInstallment');
            const totalLabel   = document.getElementById('Credit_TotalCreditAmount');
            const interestRate = 0.40;

            function recalc() {
                const amount = parseFloat(amountInput.value) || 0;
                const months = parseInt(periodInput.value)   || 0;

                if (amount < 300 || amount > 5000 ||
                    months < 5   || months > 24) {
                    totalLabel.value    = '';
                    monthlyLabel.value  = '';
                    return;
                }

                const monthlyRate = interestRate / 12;
                const monthly     = (amount * monthlyRate)
                                  / (1 - Math.pow(1 + monthlyRate, -months));
                const total       = monthly * months;

                monthlyLabel.value = monthly.toFixed(2);
                totalLabel.value   = total.toFixed(2);
            }

            amountInput.addEventListener('input', recalc);
            periodInput.addEventListener('input', recalc);
            recalc();
        })();
    </script>
}
